<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>